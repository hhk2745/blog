(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{282:function(t,e,a){"use strict";a.r(e);var n=a(13),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"쿠키"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#쿠키"}},[t._v("#")]),t._v(" 쿠키")]),t._v(" "),e("p",[t._v("HTTP 쿠키(웹 쿠키, 인터넷 쿠키, 브라우저 쿠키, 간단히 "),e("code",[t._v("쿠키")]),t._v(")를 통해 웹서버는 상태 정보(ex: 온라인 상점의 장바구니, 로그인, 방문기록, 입력폼 저장) 등 사용자가 입력한 정보를 차후 사용을 위해 저장하는 데에도 사용 가능함.\n"),e("code",[t._v("인증쿠키")]),t._v("는 일반적으로 웹 서버에서 사용자가 어떤 계정으로 로그인했는지 인증하는데 사용됨.\n관련 자료\n"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cross-site_scripting",target:"_blank",rel:"noopener noreferrer"}},[t._v("스크립팅"),e("OutboundLink")],1),t._v(" 및 "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cross-site_request_forgery",target:"_blank",rel:"noopener noreferrer"}},[t._v("사이트 간 요청 위조"),e("OutboundLink")],1)]),t._v(" "),e("h1",{attrs:{id:"웹-스토리지-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#웹-스토리지-api"}},[t._v("#")]),t._v(" 웹 스토리지 API")]),t._v(" "),e("p",[t._v("Web Storage API는 브라우저가 쿠키를 사용하는 것보다 직관적인 방식으로 key-value 를 저장할 수 있는 메커니즘을 제공함.")]),t._v(" "),e("p",[t._v("Web Storage 내의 두 가지 메커니즘")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("sessionStorage")]),t._v(" 페이지 세션 기간 동안 사용할 수 있는 각 출처에 대해 별도의 저장 영역을 유지함.(페이지 다시 로드 및 복원을 포함하여 브라우저가 열려 있는 동안).")]),t._v(" "),e("ul",[e("li",[t._v("세션에 대한 데이터만 저장, 브라우저(또는 탭)가 닫힐 때까지 데이터가 저장됨.")]),t._v(" "),e("li",[t._v("데이터는 서버로 전송되지 않음.")]),t._v(" "),e("li",[t._v("저장 제한이 쿠키보다 큼(최대 5MB)")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("localStorage")]),t._v(" 동일한 작업을 수행하지만 브라우저를 닫았다가 다시 열어도 지속됨.")]),t._v(" "),e("ul",[e("li",[t._v("만료 날짜 없이 데이터를 저장하고 javascript를 통해서만 삭제되거나 브라우저 캐시/로컬에 저장된 데이터를 삭제함.")]),t._v(" "),e("li",[t._v("저장 한도는 최대치를 갖고 있음.")])])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'storage'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("대부분의 브라우저에서 다른 윈도우에서 로컬스토리지의 데이터를 변경했을 때 이벤트가 발생함. 같은 창에 이벤트를 추가하고 localStorage의 값을 변경해도 이벤트가 발생하지 않음.\n자신의 window에서는 변경에 대한 상황을 알고 있을 것이라 판단 했을거라 예상함.")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mdn.github.io/dom-examples/web-storage/",target:"_blank",rel:"noopener noreferrer"}},[t._v("example-index"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://mdn.github.io/dom-examples/web-storage/event.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("example-event"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("example-event 페이지를 열어두고 example-index 페이지에서 값을 변경하면 event 페이지에서 이벤트를 감지해서 화면에 출력함.")])])}),[],!1,null,null,null);e.default=s.exports}}]);